{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\workplace\\\\Documents\\\\GitHub\\\\cafe-site\\\\frontend\\\\ui\\\\src\\\\components\\\\book.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Button } from \"reactstrap\";\nimport Table from \"./table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(props => {\n  _s();\n  const [totalTables, setTotalTables] = useState([]);\n\n  // User's selections\n  const [selection, setSelection] = useState({\n    table: {\n      name: null,\n      id: null\n    },\n    date: new Date(),\n    time: null,\n    location: \"Any Location\",\n    size: 0\n  });\n\n  // User's booking details\n  const [booking, setBooking] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n\n  // List of potential locations\n  const [locations] = useState([\"Any Location\", \"Patio\", \"Inside\", \"Bar\"]);\n  const [times] = useState([\"9AM\", \"10AM\", \"11AM\", \"12PM\", \"1PM\", \"2PM\", \"3PM\", \"4PM\", \"5PM\"]);\n  // Basic reservation \"validation\"\n  const [reservationError, setReservationError] = useState(false);\n  const getDate = _ => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = months[selection.date.getMonth()] + \" \" + selection.date.getDate() + \" \" + selection.date.getFullYear();\n    let time = selection.time.slice(0, -2);\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n    console.log(time);\n    const datetime = new Date(date + \" \" + time);\n    return datetime;\n  };\n  const getEmptyTables = _ => {\n    let tables = totalTables.filter(table => table.isAvailable);\n    return tables.length;\n  };\n  useEffect(() => {\n    // Check availability of tables from DB when a date and time is selected\n    if (selection.time && selection.date) {\n      (async _ => {\n        let datetime = getDate();\n        let res = await fetch(\"http://localhost:3005/availability\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            date: datetime\n          })\n        });\n        res = await res.json();\n        // Filter available tables with location and group size criteria\n        let tables = res.tables.filter(table => (selection.size > 0 ? table.capacity >= selection.size : true) && (selection.location !== \"Any Location\" ? table.location === selection.location : true));\n        setTotalTables(tables);\n      })();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selection.time, selection.date, selection.size, selection.location]);\n\n  // Make the reservation if all details are filled out\n  const reserve = async _ => {\n    if (booking.name.length === 0 | booking.phone.length === 0 | booking.email.length === 0) {\n      console.log(\"Incomplete Details\");\n      setReservationError(true);\n    } else {\n      const datetime = getDate();\n      let res = await fetch(\"http://localhost:3005/reserve\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...booking,\n          date: datetime,\n          table: selection.table.id\n        })\n      });\n      res = await res.text();\n      console.log(\"Reserved: \" + res);\n      props.setPage(2);\n    }\n  };\n\n  // Clicking on a table sets the selection state\n  const selectTable = (table_name, table_id) => {\n    setSelection({\n      ...selection,\n      table: {\n        name: table_name,\n        id: table_id\n      }\n    });\n  };\n\n  // Generate party size dropdown\n  const getSizes = _ => {\n    let newSizes = [];\n    for (let i = 1; i < 8; i++) {\n      newSizes.push( /*#__PURE__*/_jsxDEV(DropdownItem, {\n        className: \"booking-dropdown-item\",\n        onClick: e => {\n          let newSel = {\n            ...selection,\n            table: {\n              ...selection.table\n            },\n            size: i\n          };\n          setSelection(newSel);\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this));\n    }\n    return newSizes;\n  };\n\n  // Generate locations dropdown\n  const getLocations = _ => {\n    let newLocations = [];\n    locations.forEach(loc => {\n      newLocations.push( /*#__PURE__*/_jsxDEV(DropdownItem, {\n        className: \"booking-dropdown-item\",\n        onClick: _ => {\n          let newSel = {\n            ...selection,\n            table: {\n              ...selection.table\n            },\n            location: loc\n          };\n          setSelection(newSel);\n        },\n        children: loc\n      }, loc, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this));\n    });\n    return newLocations;\n  };\n\n  // Generate locations dropdown\n  const getTimes = _ => {\n    let newTimes = [];\n    times.forEach(time => {\n      newTimes.push( /*#__PURE__*/_jsxDEV(DropdownItem, {\n        className: \"booking-dropdown-item\",\n        onClick: _ => {\n          let newSel = {\n            ...selection,\n            table: {\n              ...selection.table\n            },\n            time: time\n          };\n          setSelection(newSel);\n        },\n        children: time\n      }, time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this));\n    });\n    return newTimes;\n  };\n\n  // Generating tables from available tables state\n  const getTables = _ => {\n    console.log(\"Getting tables\");\n    if (getEmptyTables() > 0) {\n      let tables = [];\n      totalTables.forEach(table => {\n        if (table.isAvailable) {\n          tables.push( /*#__PURE__*/_jsxDEV(Table, {\n            id: table._id,\n            chairs: table.capacity,\n            name: table.name,\n            empty: true,\n            selectTable: selectTable\n          }, table._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this));\n        } else {\n          tables.push( /*#__PURE__*/_jsxDEV(Table, {\n            id: table._id,\n            chairs: table.capacity,\n            name: table.name,\n            selectTable: selectTable\n          }, table._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this));\n        }\n      });\n      return tables;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      noGutters: true,\n      className: \"text-center align-items-center pizza-cta\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"looking-for-cafe\",\n          children: [!selection.table.id ? \"Book a Table\" : \"Confirm Reservation\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: !selection.table.id ? \"fas fa-chair pizza-slice\" : \"fas fa-clipboard-check pizza-slice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected-table\",\n          children: selection.table.id ? \"You are booking table \" + selection.table.name : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), reservationError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"reservation-error\",\n          children: \"* Please fill out all of the details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), !selection.table.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reservation-stuff\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"text-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            required: \"required\",\n            className: \"booking-dropdown\",\n            value: selection.date.toISOString().split(\"T\")[0],\n            onChange: e => {\n              if (!isNaN(new Date(new Date(e.target.value)))) {\n                let newSel = {\n                  ...selection,\n                  table: {\n                    ...selection.table\n                  },\n                  date: new Date(e.target.value)\n                };\n                setSelection(newSel);\n              } else {\n                console.log(\"Invalid date\");\n                let newSel = {\n                  ...selection,\n                  table: {\n                    ...selection.table\n                  },\n                  date: new Date()\n                };\n                setSelection(newSel);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              color: \"none\",\n              caret: true,\n              className: \"booking-dropdown\",\n              children: selection.time === null ? \"Select a Time\" : selection.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              right: true,\n              className: \"booking-dropdown-menu\",\n              children: getTimes()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              color: \"none\",\n              caret: true,\n              className: \"booking-dropdown\",\n              children: selection.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              right: true,\n              className: \"booking-dropdown-menu\",\n              children: getLocations()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          children: /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              color: \"none\",\n              caret: true,\n              className: \"booking-dropdown\",\n              children: selection.size === 0 ? \"Select a Party Size\" : selection.size.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              right: true,\n              className: \"booking-dropdown-menu\",\n              children: getSizes()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"tables-display\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [getEmptyTables() > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"available-tables\",\n            children: [getEmptyTables(), \" available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this) : null, selection.date && selection.time ? getEmptyTables() > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-key\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"empty-table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 23\n              }, this), \" \\xA0 Available \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"full-table\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 23\n              }, this), \" \\xA0 Unavailable \\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              noGutters: true,\n              children: getTables()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"table-display-message\",\n            children: \"No Available Tables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"table-display-message\",\n            children: \"Please select a date and time for your reservation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"confirm-reservation-stuff\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"text-center justify-content-center reservation-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          className: \"reservation-details\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            bsSize: \"lg\",\n            placeholder: \"Name\",\n            className: \"reservation-input\",\n            value: booking.name,\n            onChange: e => {\n              setBooking({\n                ...booking,\n                name: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          className: \"reservation-details\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            bsSize: \"lg\",\n            placeholder: \"Phone Number\",\n            className: \"reservation-input\",\n            value: booking.phone,\n            onChange: e => {\n              setBooking({\n                ...booking,\n                phone: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          sm: \"3\",\n          className: \"reservation-details\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            bsSize: \"lg\",\n            placeholder: \"Email\",\n            className: \"reservation-input\",\n            value: booking.email,\n            onChange: e => {\n              setBooking({\n                ...booking,\n                email: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"none\",\n            className: \"book-table-btn\",\n            onClick: _ => {\n              reserve();\n            },\n            children: \"Book Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}, \"8AKaMI2kTNO0gdRMP0wvCt4QpUM=\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Input","Button","Table","props","totalTables","setTotalTables","selection","setSelection","table","name","id","date","Date","time","location","size","booking","setBooking","phone","email","locations","times","reservationError","setReservationError","getDate","_","months","getMonth","getFullYear","slice","console","log","datetime","getEmptyTables","tables","filter","isAvailable","length","res","fetch","method","headers","body","JSON","stringify","json","capacity","reserve","text","setPage","selectTable","table_name","table_id","getSizes","newSizes","i","push","e","newSel","getLocations","newLocations","forEach","loc","getTimes","newTimes","getTables","_id","toISOString","split","isNaN","target","value","toString"],"sources":["C:/Users/workplace/Documents/GitHub/cafe-site/frontend/ui/src/components/book.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nimport Table from \"./table\";\r\n\r\nexport default (props) => {\r\n  const [totalTables, setTotalTables] = useState([]);\r\n\r\n  // User's selections\r\n  const [selection, setSelection] = useState({\r\n    table: {\r\n      name: null,\r\n      id: null,\r\n    },\r\n    date: new Date(),\r\n    time: null,\r\n    location: \"Any Location\",\r\n    size: 0,\r\n  });\r\n\r\n  // User's booking details\r\n  const [booking, setBooking] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  // List of potential locations\r\n  const [locations] = useState([\"Any Location\", \"Patio\", \"Inside\", \"Bar\"]);\r\n  const [times] = useState([\r\n    \"9AM\",\r\n    \"10AM\",\r\n    \"11AM\",\r\n    \"12PM\",\r\n    \"1PM\",\r\n    \"2PM\",\r\n    \"3PM\",\r\n    \"4PM\",\r\n    \"5PM\",\r\n  ]);\r\n  // Basic reservation \"validation\"\r\n  const [reservationError, setReservationError] = useState(false);\r\n\r\n  const getDate = (_) => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const date =\r\n      months[selection.date.getMonth()] +\r\n      \" \" +\r\n      selection.date.getDate() +\r\n      \" \" +\r\n      selection.date.getFullYear();\r\n    let time = selection.time.slice(0, -2);\r\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\r\n    console.log(time);\r\n    const datetime = new Date(date + \" \" + time);\r\n    return datetime;\r\n  };\r\n\r\n  const getEmptyTables = (_) => {\r\n    let tables = totalTables.filter((table) => table.isAvailable);\r\n    return tables.length;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check availability of tables from DB when a date and time is selected\r\n    if (selection.time && selection.date) {\r\n      (async (_) => {\r\n        let datetime = getDate();\r\n        let res = await fetch(\"http://localhost:3005/availability\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            date: datetime,\r\n          }),\r\n        });\r\n        res = await res.json();\r\n        // Filter available tables with location and group size criteria\r\n        let tables = res.tables.filter(\r\n          (table) =>\r\n            (selection.size > 0 ? table.capacity >= selection.size : true) &&\r\n            (selection.location !== \"Any Location\"\r\n              ? table.location === selection.location\r\n              : true)\r\n        );\r\n        setTotalTables(tables);\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selection.time, selection.date, selection.size, selection.location]);\r\n\r\n  // Make the reservation if all details are filled out\r\n  const reserve = async (_) => {\r\n    if (\r\n      (booking.name.length === 0) |\r\n      (booking.phone.length === 0) |\r\n      (booking.email.length === 0)\r\n    ) {\r\n      console.log(\"Incomplete Details\");\r\n      setReservationError(true);\r\n    } else {\r\n      const datetime = getDate();\r\n      let res = await fetch(\"http://localhost:3005/reserve\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          ...booking,\r\n          date: datetime,\r\n          table: selection.table.id,\r\n        }),\r\n      });\r\n      res = await res.text();\r\n      console.log(\"Reserved: \" + res);\r\n      props.setPage(2);\r\n    }\r\n  };\r\n\r\n  // Clicking on a table sets the selection state\r\n  const selectTable = (table_name, table_id) => {\r\n    setSelection({\r\n      ...selection,\r\n      table: {\r\n        name: table_name,\r\n        id: table_id,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Generate party size dropdown\r\n  const getSizes = (_) => {\r\n    let newSizes = [];\r\n\r\n    for (let i = 1; i < 8; i++) {\r\n      newSizes.push(\r\n        <DropdownItem\r\n          key={i}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={(e) => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table,\r\n              },\r\n              size: i,\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {i}\r\n        </DropdownItem>\r\n      );\r\n    }\r\n    return newSizes;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getLocations = (_) => {\r\n    let newLocations = [];\r\n    locations.forEach((loc) => {\r\n      newLocations.push(\r\n        <DropdownItem\r\n          key={loc}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={(_) => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table,\r\n              },\r\n              location: loc,\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {loc}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newLocations;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getTimes = (_) => {\r\n    let newTimes = [];\r\n    times.forEach((time) => {\r\n      newTimes.push(\r\n        <DropdownItem\r\n          key={time}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={(_) => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table,\r\n              },\r\n              time: time,\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {time}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newTimes;\r\n  };\r\n\r\n  // Generating tables from available tables state\r\n  const getTables = (_) => {\r\n    console.log(\"Getting tables\");\r\n    if (getEmptyTables() > 0) {\r\n      let tables = [];\r\n      totalTables.forEach((table) => {\r\n        if (table.isAvailable) {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              empty\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        } else {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        }\r\n      });\r\n      return tables;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row noGutters className=\"text-center align-items-center pizza-cta\">\r\n        <Col>\r\n          <p className=\"looking-for-cafe\">\r\n            {!selection.table.id ? \"Book a Table\" : \"Confirm Reservation\"}\r\n            <i\r\n              className={\r\n                !selection.table.id\r\n                  ? \"fas fa-chair pizza-slice\"\r\n                  : \"fas fa-clipboard-check pizza-slice\"\r\n              }\r\n            ></i>\r\n          </p>\r\n          <p className=\"selected-table\">\r\n            {selection.table.id\r\n              ? \"You are booking table \" + selection.table.name\r\n              : null}\r\n          </p>\r\n\r\n          {reservationError ? (\r\n            <p className=\"reservation-error\">\r\n              * Please fill out all of the details.\r\n            </p>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n\r\n      {!selection.table.id ? (\r\n        <div id=\"reservation-stuff\">\r\n          <Row noGutters className=\"text-center align-items-center\">\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <input\r\n                type=\"date\"\r\n                required=\"required\"\r\n                className=\"booking-dropdown\"\r\n                value={selection.date.toISOString().split(\"T\")[0]}\r\n                onChange={(e) => {\r\n                  if (!isNaN(new Date(new Date(e.target.value)))) {\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table,\r\n                      },\r\n                      date: new Date(e.target.value),\r\n                    };\r\n                    setSelection(newSel);\r\n                  } else {\r\n                    console.log(\"Invalid date\");\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table,\r\n                      },\r\n                      date: new Date(),\r\n                    };\r\n                    setSelection(newSel);\r\n                  }\r\n                }}\r\n              ></input>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.time === null ? \"Select a Time\" : selection.time}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getTimes()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.location}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getLocations()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.size === 0\r\n                    ? \"Select a Party Size\"\r\n                    : selection.size.toString()}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getSizes()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"tables-display\">\r\n            <Col>\r\n              {getEmptyTables() > 0 ? (\r\n                <p className=\"available-tables\">{getEmptyTables()} available</p>\r\n              ) : null}\r\n\r\n              {selection.date && selection.time ? (\r\n                getEmptyTables() > 0 ? (\r\n                  <div>\r\n                    <div className=\"table-key\">\r\n                      <span className=\"empty-table\"></span> &nbsp; Available\r\n                      &nbsp;&nbsp;\r\n                      <span className=\"full-table\"></span> &nbsp; Unavailable\r\n                      &nbsp;&nbsp;\r\n                    </div>\r\n                    <Row noGutters>{getTables()}</Row>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"table-display-message\">No Available Tables</p>\r\n                )\r\n              ) : (\r\n                <p className=\"table-display-message\">\r\n                  Please select a date and time for your reservation.\r\n                </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <div id=\"confirm-reservation-stuff\">\r\n          <Row\r\n            noGutters\r\n            className=\"text-center justify-content-center reservation-details-container\"\r\n          >\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Name\"\r\n                className=\"reservation-input\"\r\n                value={booking.name}\r\n                onChange={(e) => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    name: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Phone Number\"\r\n                className=\"reservation-input\"\r\n                value={booking.phone}\r\n                onChange={(e) => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    phone: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Email\"\r\n                className=\"reservation-input\"\r\n                value={booking.email}\r\n                onChange={(e) => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    email: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"text-center\">\r\n            <Col>\r\n              <Button\r\n                color=\"none\"\r\n                className=\"book-table-btn\"\r\n                onClick={(_) => {\r\n                  reserve();\r\n                }}\r\n              >\r\n                Book Now\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}