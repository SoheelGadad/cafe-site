[{"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\index.js":"1","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\serviceWorker.js":"2","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\App.js":"3","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\thankYou.js":"4","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\reducer\\useReducer.js":"5","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\book.js":"6","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\home.js":"7","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Logout\\logout.js":"8","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Forgetpassword\\ForgetPassword.js":"9","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\navbar.js":"10","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\userdashbord\\Dashboard.jsx":"11","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Register\\Register.jsx":"12","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Login\\login.jsx":"13","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\table.js":"14"},{"size":669,"mtime":1671525127163,"results":"15","hashOfConfig":"16"},{"size":5140,"mtime":1671525127165,"results":"17","hashOfConfig":"16"},{"size":1653,"mtime":1671697546440,"results":"18","hashOfConfig":"16"},{"size":488,"mtime":1671525127145,"results":"19","hashOfConfig":"16"},{"size":169,"mtime":1671525127163,"results":"20","hashOfConfig":"16"},{"size":13236,"mtime":1671525127133,"results":"21","hashOfConfig":"16"},{"size":845,"mtime":1671526941296,"results":"22","hashOfConfig":"16"},{"size":860,"mtime":1671697512483,"results":"23","hashOfConfig":"16"},{"size":1159,"mtime":1671697546441,"results":"24","hashOfConfig":"16"},{"size":1473,"mtime":1671699791769,"results":"25","hashOfConfig":"16"},{"size":4223,"mtime":1671697512490,"results":"26","hashOfConfig":"16"},{"size":1561,"mtime":1671697512486,"results":"27","hashOfConfig":"16"},{"size":1818,"mtime":1671697512471,"results":"28","hashOfConfig":"16"},{"size":1344,"mtime":1671525127144,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ppjmcw",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\index.js",[],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\serviceWorker.js",[],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\App.js",[],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\thankYou.js",["76"],[],"import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nexport default _ => {\r\n  return (\r\n    <div>\r\n      <Row noGutters className=\"text-center\">\r\n        <Col>\r\n          <p className=\"thanks-header\">Thank You!</p>\r\n          <i className=\"fas fa-pizza-slice thank-you-pizza\"></i>\r\n          <p className=\"thanks-subtext\">\r\n            You should receive an email with the details of your reservation.\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\reducer\\useReducer.js",[],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\book.js",["77"],["78"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nimport Table from \"./table\";\r\n\r\nexport default (props) => {\r\n  const [totalTables, setTotalTables] = useState([]);\r\n\r\n  // User's selections\r\n  const [selection, setSelection] = useState({\r\n    table: {\r\n      name: null,\r\n      id: null,\r\n    },\r\n    date: new Date(),\r\n    time: null,\r\n    location: \"Any Location\",\r\n    size: 0,\r\n  });\r\n\r\n  // User's booking details\r\n  const [booking, setBooking] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  // List of potential locations\r\n  const [locations] = useState([\"Any Location\", \"Patio\", \"Inside\", \"Bar\"]);\r\n  const [times] = useState([\r\n    \"9AM\",\r\n    \"10AM\",\r\n    \"11AM\",\r\n    \"12PM\",\r\n    \"1PM\",\r\n    \"2PM\",\r\n    \"3PM\",\r\n    \"4PM\",\r\n    \"5PM\",\r\n  ]);\r\n  // Basic reservation \"validation\"\r\n  const [reservationError, setReservationError] = useState(false);\r\n\r\n  const getDate = (_) => {\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const date =\r\n      months[selection.date.getMonth()] +\r\n      \" \" +\r\n      selection.date.getDate() +\r\n      \" \" +\r\n      selection.date.getFullYear();\r\n    let time = selection.time.slice(0, -2);\r\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\r\n    console.log(time);\r\n    const datetime = new Date(date + \" \" + time);\r\n    return datetime;\r\n  };\r\n\r\n  const getEmptyTables = (_) => {\r\n    let tables = totalTables.filter((table) => table.isAvailable);\r\n    return tables.length;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check availability of tables from DB when a date and time is selected\r\n    if (selection.time && selection.date) {\r\n      (async (_) => {\r\n        let datetime = getDate();\r\n        let res = await fetch(\"http://localhost:3005/availability\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            date: datetime,\r\n          }),\r\n        });\r\n        res = await res.json();\r\n        // Filter available tables with location and group size criteria\r\n        let tables = res.tables.filter(\r\n          (table) =>\r\n            (selection.size > 0 ? table.capacity >= selection.size : true) &&\r\n            (selection.location !== \"Any Location\"\r\n              ? table.location === selection.location\r\n              : true)\r\n        );\r\n        setTotalTables(tables);\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selection.time, selection.date, selection.size, selection.location]);\r\n\r\n  // Make the reservation if all details are filled out\r\n  const reserve = async (_) => {\r\n    if (\r\n      (booking.name.length === 0) |\r\n      (booking.phone.length === 0) |\r\n      (booking.email.length === 0)\r\n    ) {\r\n      console.log(\"Incomplete Details\");\r\n      setReservationError(true);\r\n    } else {\r\n      const datetime = getDate();\r\n      let res = await fetch(\"http://localhost:3005/reserve\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          ...booking,\r\n          date: datetime,\r\n          table: selection.table.id,\r\n        }),\r\n      });\r\n      res = await res.text();\r\n      console.log(\"Reserved: \" + res);\r\n      props.setPage(2);\r\n    }\r\n  };\r\n\r\n  // Clicking on a table sets the selection state\r\n  const selectTable = (table_name, table_id) => {\r\n    setSelection({\r\n      ...selection,\r\n      table: {\r\n        name: table_name,\r\n        id: table_id,\r\n      },\r\n    });\r\n  };\r\n\r\n  // Generate party size dropdown\r\n  const getSizes = (_) => {\r\n    let newSizes = [];\r\n\r\n    for (let i = 1; i < 8; i++) {\r\n      newSizes.push(\r\n        <DropdownItem\r\n          key={i}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={(e) => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table,\r\n              },\r\n              size: i,\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {i}\r\n        </DropdownItem>\r\n      );\r\n    }\r\n    return newSizes;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getLocations = (_) => {\r\n    let newLocations = [];\r\n    locations.forEach((loc) => {\r\n      newLocations.push(\r\n        <DropdownItem\r\n          key={loc}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={(_) => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table,\r\n              },\r\n              location: loc,\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {loc}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newLocations;\r\n  };\r\n\r\n  // Generate locations dropdown\r\n  const getTimes = (_) => {\r\n    let newTimes = [];\r\n    times.forEach((time) => {\r\n      newTimes.push(\r\n        <DropdownItem\r\n          key={time}\r\n          className=\"booking-dropdown-item\"\r\n          onClick={(_) => {\r\n            let newSel = {\r\n              ...selection,\r\n              table: {\r\n                ...selection.table,\r\n              },\r\n              time: time,\r\n            };\r\n            setSelection(newSel);\r\n          }}\r\n        >\r\n          {time}\r\n        </DropdownItem>\r\n      );\r\n    });\r\n    return newTimes;\r\n  };\r\n\r\n  // Generating tables from available tables state\r\n  const getTables = (_) => {\r\n    console.log(\"Getting tables\");\r\n    if (getEmptyTables() > 0) {\r\n      let tables = [];\r\n      totalTables.forEach((table) => {\r\n        if (table.isAvailable) {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              empty\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        } else {\r\n          tables.push(\r\n            <Table\r\n              key={table._id}\r\n              id={table._id}\r\n              chairs={table.capacity}\r\n              name={table.name}\r\n              selectTable={selectTable}\r\n            />\r\n          );\r\n        }\r\n      });\r\n      return tables;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row noGutters className=\"text-center align-items-center pizza-cta\">\r\n        <Col>\r\n          <p className=\"looking-for-cafe\">\r\n            {!selection.table.id ? \"Book a Table\" : \"Confirm Reservation\"}\r\n            <i\r\n              className={\r\n                !selection.table.id\r\n                  ? \"fas fa-chair pizza-slice\"\r\n                  : \"fas fa-clipboard-check pizza-slice\"\r\n              }\r\n            ></i>\r\n          </p>\r\n          <p className=\"selected-table\">\r\n            {selection.table.id\r\n              ? \"You are booking table \" + selection.table.name\r\n              : null}\r\n          </p>\r\n\r\n          {reservationError ? (\r\n            <p className=\"reservation-error\">\r\n              * Please fill out all of the details.\r\n            </p>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n\r\n      {!selection.table.id ? (\r\n        <div id=\"reservation-stuff\">\r\n          <Row noGutters className=\"text-center align-items-center\">\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <input\r\n                type=\"date\"\r\n                required=\"required\"\r\n                className=\"booking-dropdown\"\r\n                value={selection.date.toISOString().split(\"T\")[0]}\r\n                onChange={(e) => {\r\n                  if (!isNaN(new Date(new Date(e.target.value)))) {\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table,\r\n                      },\r\n                      date: new Date(e.target.value),\r\n                    };\r\n                    setSelection(newSel);\r\n                  } else {\r\n                    console.log(\"Invalid date\");\r\n                    let newSel = {\r\n                      ...selection,\r\n                      table: {\r\n                        ...selection.table,\r\n                      },\r\n                      date: new Date(),\r\n                    };\r\n                    setSelection(newSel);\r\n                  }\r\n                }}\r\n              ></input>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.time === null ? \"Select a Time\" : selection.time}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getTimes()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.location}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getLocations()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\r\n                  {selection.size === 0\r\n                    ? \"Select a Party Size\"\r\n                    : selection.size.toString()}\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"booking-dropdown-menu\">\r\n                  {getSizes()}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"tables-display\">\r\n            <Col>\r\n              {getEmptyTables() > 0 ? (\r\n                <p className=\"available-tables\">{getEmptyTables()} available</p>\r\n              ) : null}\r\n\r\n              {selection.date && selection.time ? (\r\n                getEmptyTables() > 0 ? (\r\n                  <div>\r\n                    <div className=\"table-key\">\r\n                      <span className=\"empty-table\"></span> &nbsp; Available\r\n                      &nbsp;&nbsp;\r\n                      <span className=\"full-table\"></span> &nbsp; Unavailable\r\n                      &nbsp;&nbsp;\r\n                    </div>\r\n                    <Row noGutters>{getTables()}</Row>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"table-display-message\">No Available Tables</p>\r\n                )\r\n              ) : (\r\n                <p className=\"table-display-message\">\r\n                  Please select a date and time for your reservation.\r\n                </p>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <div id=\"confirm-reservation-stuff\">\r\n          <Row\r\n            noGutters\r\n            className=\"text-center justify-content-center reservation-details-container\"\r\n          >\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Name\"\r\n                className=\"reservation-input\"\r\n                value={booking.name}\r\n                onChange={(e) => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    name: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Phone Number\"\r\n                className=\"reservation-input\"\r\n                value={booking.phone}\r\n                onChange={(e) => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    phone: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"3\" className=\"reservation-details\">\r\n              <Input\r\n                type=\"text\"\r\n                bsSize=\"lg\"\r\n                placeholder=\"Email\"\r\n                className=\"reservation-input\"\r\n                value={booking.email}\r\n                onChange={(e) => {\r\n                  setBooking({\r\n                    ...booking,\r\n                    email: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row noGutters className=\"text-center\">\r\n            <Col>\r\n              <Button\r\n                color=\"none\"\r\n                className=\"book-table-btn\"\r\n                onClick={(_) => {\r\n                  reserve();\r\n                }}\r\n              >\r\n                Book Now\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\home.js",["79"],[],"import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <div class=\"home swiper\" id=\"home\">\r\n        <div class=\"swiper-wrapper\">\r\n          <div class=\"swiper-slide container\">\r\n            <img\r\n              src={require(\"../images/1.jpg\")}\r\n              alt=\"cafe\"\r\n              className=\"big-img\"\r\n            />\r\n            <div class=\"home-text\">\r\n              <h1>CafeERA</h1>\r\n              <p className=\"looking-for-cafe\">\r\n                If you're looking for morring cafe\r\n              </p>\r\n              <Button color=\"none\" className=\"book-table-btn\" href=\"/Book\">\r\n                Book a Table\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"swiper\"></div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Logout\\logout.js",["80","81","82","83","84"],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Forgetpassword\\ForgetPassword.js",["85"],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\navbar.js",["86"],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\userdashbord\\Dashboard.jsx",["87"],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Register\\Register.jsx",[],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\Login\\login.jsx",["88","89"],[],"C:\\Users\\sahil\\Documents\\GitHub\\cafe-site\\frontend\\UI\\src\\components\\table.js",["90"],[],"import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nexport default props => {\r\n  const getRow1 = _ => {\r\n    let chairs = [];\r\n    for (var i = 0; i < Math.ceil(props.chairs / 2); i++) {\r\n      chairs.push(\r\n        <span\r\n          key={i}\r\n          className={props.empty ? \"empty-table\" : \"full-table\"}\r\n        ></span>\r\n      );\r\n    }\r\n    return chairs;\r\n  };\r\n  const getRow2 = _ => {\r\n    let chairs2 = [];\r\n    for (var i = 0; i < Math.floor(props.chairs / 2); i++) {\r\n      chairs2.push(\r\n        <span\r\n          key={i}\r\n          className={props.empty ? \"empty-table\" : \"full-table\"}\r\n        ></span>\r\n      );\r\n    }\r\n    return chairs2;\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <Col\r\n        className={props.empty ? \"table selectable-table\" : \"table\"}\r\n        onClick={_ => {\r\n          props.empty\r\n            ? props.selectTable(props.name, props.id)\r\n            : console.log(\"Tried to select a full table\");\r\n        }}\r\n      >\r\n        <Row noGutters className=\"table-row\">\r\n          <Col className=\"text-center\">{getRow1()}</Col>\r\n        </Row>\r\n        <Row noGutters className=\"table-row\">\r\n          <Col className=\"text-center\">{getRow2()}</Col>\r\n        </Row>\r\n\r\n        <p className=\"text-center table-name\">{props.name}</p>\r\n      </Col>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"91","severity":1,"message":"92","line":4,"column":1,"nodeType":"93","endLine":18,"endColumn":3},{"ruleId":"91","severity":1,"message":"92","line":15,"column":1,"nodeType":"93","endLine":457,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":113,"column":6,"nodeType":"96","endLine":113,"endColumn":74,"suggestions":"97","suppressions":"98"},{"ruleId":"91","severity":1,"message":"92","line":4,"column":1,"nodeType":"93","endLine":30,"endColumn":3},{"ruleId":"99","severity":1,"message":"100","line":7,"column":11,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"103","severity":2,"message":"104","line":7,"column":31,"nodeType":"101","endLine":7,"endColumn":41},{"ruleId":"103","severity":2,"message":"105","line":8,"column":20,"nodeType":"101","endLine":8,"endColumn":31},{"ruleId":"103","severity":2,"message":"106","line":10,"column":3,"nodeType":"101","endLine":10,"endColumn":12},{"ruleId":"94","severity":1,"message":"107","line":16,"column":6,"nodeType":"96","endLine":16,"endColumn":8,"suggestions":"108"},{"ruleId":"99","severity":1,"message":"109","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"110","line":6,"column":18,"nodeType":"101","messageId":"102","endLine":6,"endColumn":26},{"ruleId":"94","severity":1,"message":"111","line":24,"column":6,"nodeType":"96","endLine":24,"endColumn":8,"suggestions":"112"},{"ruleId":"99","severity":1,"message":"109","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":9,"column":11,"nodeType":"101","messageId":"102","endLine":9,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":4,"column":1,"nodeType":"93","endLine":51,"endColumn":3},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDate'. Either include it or remove the dependency array.","ArrayExpression",["113"],["114"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/rules-of-hooks","React Hook \"useContext\" is called in function \"logout\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useNavigate\" is called in function \"logout\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"logout\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.",["115"],"'styles' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["116"],{"desc":"117","fix":"118"},{"kind":"119","justification":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [selection.time, selection.date, selection.size, selection.location, getDate]",{"range":"125","text":"126"},"directive","","Update the dependencies array to be: [dispatch, navigate]",{"range":"127","text":"128"},"Update the dependencies array to be: [navigate]",{"range":"129","text":"130"},[2803,2871],"[selection.time, selection.date, selection.size, selection.location, getDate]",[483,485],"[dispatch, navigate]",[493,495],"[navigate]"]